Count the given numbers on your fingers and 
find the correct finger on which the number ends.



#includebitsstdc++.h
using namespace std;

#ifndef ONLINE_JUDGE
#define debug(x) cerr  #x ; _print(x); cerr  endl;
#else
#define debug(x);
#endif

typedef long long ll;
typedef unsigned long long ull;
typedef long double lld;

void _print(ll t) {cerr  t;}
void _print(int t) {cerr  t;}
void _print(string t) {cerr  t;}
void _print(char t) {cerr  t;}
void _print(lld t) {cerr  t;}
void _print(double t) {cerr  t;}
void _print(ull t) {cerr  t;}

template class T, class V void _print(pair T, V p);
template class T void _print(vector T v);
template class T void _print(set T v);
template class T, class V void _print(map T, V v);
template class T void _print(multiset T v);
template class T, class V void _print(pair T, V p) {cerr  {; _print(p.ff); cerr  ,; _print(p.ss); cerr  };}
template class T void _print(vector T v) {cerr  [ ; for (T i  v) {_print(i); cerr   ;} cerr  ];}
template class T void _print(set T v) {cerr  [ ; for (T i  v) {_print(i); cerr   ;} cerr  ];}
template class T void _print(multiset T v) {cerr  [ ; for (T i  v) {_print(i); cerr   ;} cerr  ];}
template class T, class V void _print(map T, V v) {cerr  [ ; for (auto i  v) {_print(i); cerr   ;} cerr  ];}

#define fast_io iossync_with_stdio(0);cin.tie(0);cout.tie(0);
#define lli long long int
#define mod 1000000007
#define PB push_back
#define PPB pop_back
#define MP make_pair
#define vi vectorint
#define vpi vectorpairint,int
#define vc vectorchar
#define vlli vectorlong long int
#define uos unordered_setint
#define min_heap priority_queueint,vectorint,greaterint
#define max_heap priority_queueint
#define pii pairint,int
#define F first
#define S second
#define loop(a,b) for(lli i=a;i=b;i++)
#define endl 'n'

int count_fingure_number(int n)
{
	int res = n%8;
	if(res == 0)
		return 2;
	else if(res  5)
		return res;
	else
		return 10 - res;
}

void solve()
{
	int tc;
	cintc;

	while(tc--)
	{	
		int n;
		cinn;
		coutcount_fingure_number(n);
	}
}

int main()
{
	fast_io;

#ifndef ONLINE_JUDGE
	freopen(input.txt,r,stdin);
	freopen(output.txt,w,stdout);
	freopen(error.txt,w,stderr);
#endif

	solve();

	return 0;
}
